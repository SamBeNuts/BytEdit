//Mon exemple
try
{
    connection.Open();
                
    MySqlCommand cmd = connection.CreateCommand();
    cmd.CommandText = "SELECT username FROM users WHERE id=4";
                
    MySqlDataReader rdr = cmd.ExecuteReader();
                
    while (rdr.Read())
    {
        label.Content = rdr["username"];
    }
    rdr.Close();

    connection.Close();
}
catch
{

}

//Mon exemple 2
try
{
    connection.Open();
                
    MySqlCommand cmd = connection.CreateCommand();
	cmd.CommandText = "INSERT INTO users (username) VALUES (@username)"; 

	cmd.Parameters.AddWithValue("@username", username);

	cmd.ExecuteNonQuery();

    connection.Close();
}
catch
{

}

//exemple prof
using MySql.Data.MySqlClient;

namespace TestMySQL
{
    public partial class Form1 : Form
    {
        private MySqlConnection connection;
        string connectionString = "SERVER=127.0.0.1; DATABASE=mydb; UID=root; PASSWORD=";

        /*public Form1()
        {
            InitializeComponent();
        }*/


        // ECRITURE ds la base
        public void button_w_Click(object sender, EventArgs e)
        {

        // Création d'un contact à ajouter grâce à la classe Contact
        Contact contact = new Contact();
            contact.Name = textBox_name.Text;
            contact.Tel = textBox_tel.Text;

            // Connection à Mysql
            connection = new MySqlConnection(connectionString);
            try
            {
                // Ouverture de la connexion SQL
                connection.Open();

                // Création d'une requête SQL (écriture)
                MySqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "INSERT INTO repertoire (name, tel) VALUES (@name, @tel)"; 

                // paramètres à transmettre
                cmd.Parameters.AddWithValue("@name", contact.Name);
                cmd.Parameters.AddWithValue("@tel", contact.Tel);

                // Exécution de la commande SQL
                cmd.ExecuteNonQuery();

                // Fermeture de la connexion
                connection.Close();
            }
            catch
            {
                // Gestion des erreurs :
                // Possibilité de créer un Logger pour les exceptions SQL reçus
                // Possibilité de créer une méthode avec un booléan en retour pour savoir si le contact à été ajouté correctement.
            }
            
        }



        // LECTURE ds la base
        private void button_r_Click(object sender, EventArgs e)
        {
            // Création d'un contact à lire
            Contact contact = new Contact();

            // Connection Mysql
            connection = new MySqlConnection(connectionString);
            try
            {
                // Ouverture de la connexion SQL
                connection.Open();

                // Création d'une requête SQL
                MySqlCommand cmd = connection.CreateCommand();
                cmd.CommandText = "SELECT id, name, tel FROM repertoire";


                // création d'un reader et lecture de table dans comboBox
                MySqlDataReader rdr = cmd.ExecuteReader();

                //comboBox_r.Items.Clear();
                while (rdr.Read())
                {
                    comboBox_r.Items.Add(rdr["Id"] + " - " + rdr["Name"] + " - " + rdr["Tel"]);
                    
                }
                rdr.Close();


                // lecture table dans dataGridView
                cmd.CommandText = "SELECT * FROM repertoire";
                MySqlDataAdapter adap = new MySqlDataAdapter(cmd);
                DataSet ds = new DataSet();
                adap.Fill(ds);
                dataGridView_r.DataSource = ds.Tables[0].DefaultView;

                
                // Fermeture de la connexion
                connection.Close();
            }
            catch
            {
                // Gestion des erreurs :
                // Possibilité de créer un Logger pour les exceptions SQL reçus
                // Possibilité de créer une méthode avec un booléan en retour pour savoir si le contact à été ajouté correctement.
            }



        }

        
    }
}